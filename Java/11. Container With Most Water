//Accepted by Leetcode

public class Solution {
    public int maxArea(int[] height) {
        int max=0;
        int vol=0;
        int i=0;
        int j=height.length-1;
        while(i<j){
            vol=(j-i)*Math.min(height[j],height[i]);
            max=Math.max(max,vol);
            if(height[j]<=height[i]){
                j--;
            }
            else{
                i++;
            }
        }
        return max;
    }
}

//Run time error (brute force)

public class Solution {
    public int maxArea(int[] height) {
        int max=0;
        int vol=0;
        for(int i=0;i<height.length-1;i++){
            
            for(int j=i+1;j<height.length;j++){
                //calculate vol,set max as max[vol,max]
                vol=(j-i)*Math.min(height[j],height[i]);
                max=Math.max(max,vol);
            
                
            }
        }
        return max;
    }
}
